# Plugin zum Abfragen von Google Weather
# Version 0.5 2011-02-15
# Copyright: Bodo (http://knx-user-forum.de/members/bodo.html)
# License: GPL (v2)
# Aufbau möglichst so, dass man unterhalb der Definitionen nichts ändern muss!

##################
### DEFINITION ###
##################

my $city = "Zurich";		# Meine Stadt, hier statt ü,ä,ö einfach u,a,o nehmen oder ue,ae,oe (Amis halt)
my $country = "Schweiz";	# Mein Land
my $lang = "de";		# Meine Sprache

my $google_temp_ga		= "7/0/0";	# Gruppenadresse Temperatur (DPT9)
my $google_hum_ga		= "7/0/1";	# Gruppenadresse Luftfeuchte (DPT16)
my $google_forecast_maxtemp_ga 	= "7/0/2";	# Gruppenadresse Temperatur Maximum (DPT9)
my $google_forecast_mintemp_ga 	= "7/0/3";	# Gruppenadresse Temperatur Minimum (DPT9)
my $google_clouds_ga		= "7/0/4";	# Gruppenadresse Wolken (DPT16)
my $google_forecast_clouds_ga	= "7/0/5";	# Gruppenadresse Vorhersage Wolken (DPT16)
my $google_wind_ga		= "7/0/6";	# Gruppenadresse Wind (DPT16)

my $google_ip			= "http://www.google.com/ig/api?weather=";
my $htdocs			= "/var/www/";			# Das Webverzeichnis
my $google_xml			= "google_weather.xml";		# Der XML Datensatz
my $weather_html		= "google_weather.html";	# Ausgabe als HTML
my $google_css			= "google_weather.css";		# Das Stylesheet

$plugin_info{$plugname.'_cycle'} = 600; # Eigenen Aufruf-Zyklus setzen (Initialisierung/zyklisches prüfen) 
					# nicht zu klein, da die Daten sowieso in längeren Perioden refresht werden
					# und das Plugin auf die CF schreibt.

#######################
### ENDE DEFINITION ###
#######################

# Hauptverarbeitung
use LWP::Simple;
use XML::Simple;
use Encode qw(encode decode);
# use open ":utf8";

my $url = $google_ip.$city."+".$country."&hl=".$lang;
my $xml = encode("utf8",get($url));
# my $xml = get($url);
die "Couldn't get it!" unless defined $xml;

my $xml_w = ">".$htdocs.$google_xml;
open(XML, $xml_w);    # XML Datei zum Schreiben öffnen
  print XML $xml;
close(XML);

my $weather = XMLin($xml)->{weather};

knx_write($google_temp_ga,$weather->{current_conditions}{temp_c}{data},9);

my $google_hum = $weather->{current_conditions}{humidity}{data};
$google_hum =~ m/(\s)(\d{1,3})(\s)/; # ($1)($2)($3)
knx_write($google_hum_ga,$2,5);

knx_write($google_forecast_maxtemp_ga,$weather->{forecast_conditions}[0]{high}{data},9);

knx_write($google_forecast_mintemp_ga,$weather->{forecast_conditions}[0]{low}{data},9);

my $google_clouds = $weather->{current_conditions}{condition}{data};
if ($google_clouds =~ m/(\D*)(\s)(\D*)/) {  # \s findet Zwischenraum (whitspaces). ($1)($2)($3)
  knx_write($google_clouds_ga,$1." ".$3,16);
} else {
  knx_write($google_clouds_ga,$google_clouds,16);
}

my $google_forecast_clouds = $weather->{forecast_conditions}[0]{condition}{data};
if ($google_forecast_clouds =~ m/(\D*)(\s)(\D*)/) { # ($1)($2)($3)
  knx_write($google_forecast_clouds_ga,$1." ".$3,16);
} else {
  knx_write($google_forecast_clouds_ga,$google_forecast_clouds,16);
}
my $google_wind = $weather->{current_conditions}{wind_condition}{data};
$google_wind =~ m/(\s)(\D{1,3})(\s)(\D*)(\s)(\d{1,3})(\s)/; # ($1)($2)($3)($4)($5)($6)($7)
knx_write($google_wind_ga,$2.", ".$6,16);

my $html = 
"<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN'>
<html>
<head>
<title>Wetter</title>
<meta name='language' content='de'>
<meta http-equiv='content-type' content='text/html; charset=utf8'>
<link rel='stylesheet' type='text/css' href='".$google_css."'>
<style type='text/css'>
<!--
td {
  vertical-align: top;
  padding: 10px;
  background-color: black;
  border: 1px #fff solid;
  font-family: Verdana,Helvetica,Arial,Sans-serif;
  font-size: 10px;
  color: #fff;
}
=-->
</style>
</head>
<body>
<table>".

"<tr><td colspan='5'><h1>".$weather->{forecast_information}{city}{data}.":</h1></td></tr>\n".
"<tr>\n".
"<td>\n".
"<strong>".$weather->{forecast_information}{current_date_time}{data}."</strong><br/>\n".
"<img src=\"http://www.google.com/".$weather->{current_conditions}{icon}{data}."\" alt=\"".
$weather->{current_conditions}{condition}{data}."\" /><br/>\n".
$weather->{current_conditions}{condition}{data}."<br/>\n".
"Temperatur: ".$weather->{current_conditions}{temp_c}{data}."° C<br/>\n".
$weather->{current_conditions}{humidity}{data}."<br/>\n".
$weather->{current_conditions}{wind_condition}{data}."<br/>\n".
"</td>\n";

for(my $j=0;$j<4;$j++) {
$html = $html."<td>\n".
"<strong>".$weather->{forecast_conditions}[$j]{day_of_week}{data}."</strong><br/>\n".
"<img src=\"http://www.google.com/".$weather->{forecast_conditions}[$j]{icon}{data}."\" alt=\"".$weather->{forecast_conditions}[$j]{condition}{data}."\" /><br/>\n".
$weather->{forecast_conditions}[$j]{condition}{data}."<br/>\n".
"min. ".$weather->{forecast_conditions}[$j]{low}{data}."° C<br/>max. ".$weather->{forecast_conditions}[$j]{high}{data}."° C<br/>\n".
"</td>\n";
}
$html = $html."</tr>
</table>
</body>";


my $html_datei = $htdocs.$weather_html;

open(HTML, ">:utf8", $html_datei);    # HTML Datei zum Schreiben öffnen
  print HTML $html;
close(HTML);

