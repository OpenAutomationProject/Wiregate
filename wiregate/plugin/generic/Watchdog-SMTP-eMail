# Demo-Plugin zum prüfen auf Plugin Timeout-Fehler 
# und eMail-Versand 
# - mit SSL (alte Version ohne SSL sieh SVN rev 622)
# - benoetigt Paket libnet-smtp-ssl-perl

my $hostname = `hostname`;

##################
### DEFINITION ###
##################

my $Empfaenger = 'meine@domain.de'; # Anpassen, mehrere mit ,
my $Absender = 'WireGate <abc@gmx.de>'; # unbedingt anpassen, die Absenderadresse sollte gültig sein um Probleme zu vermeiden
my $Betreff = "Plugin-Alarm von $hostname !";
my $username = 'abc@gmx.de'; #Anpassen! Username fuer SMTP-Server
my $password = "meinpasswort"; #Anpassen! Passwort fuer SMTP-Server
my $mailserver='mail.gmx.net:465'; # SMTP-Relay mit SSL: das muss natuerlich angepasst werden!
# oder z.B. smtp.gmail.com:465 fuer Gmail; 
$plugin_info{$plugname.'_cycle'} = 300;

#######################
### ENDE DEFINITION ###
#######################

use Net::SMTP::SSL;
use MIME::Base64;

my ($ret,$err);

foreach (@plugins) {
my $plugname2 = basename($_);
if ($plugin_info{$plugname2.'_timeout_err'} >= $plugin_max_errors) {
      $ret .= "Alarm: Plugin $plugname2 hat $plugin_info{$plugname2.'_timeout_err'} Timeout-Fehler (Max: $plugin_max_errors)";
      # Alert
      if (!$plugin_info{$plugname2.'_timeout_alarm'}) {
            # sende Warn-eMail
            my $smtp = Net::SMTP::SSL->new($mailserver, Timeout => 10) or return "Fehler beim verbinden zu $mailserver $!; $@";
            $smtp->auth($username,$password) or return "SASL Auth failed $!;$@"; # try SASL
            $smtp->status() < 5 or return "Auth failed: $! ". $smtp->status();
            $smtp->mail($Absender) or return "Absender $Absender abgelehnt $!";
            $smtp->to($Empfaenger) or return "Empfaenger $Empfaenger abgelehnt $!"; 
            $smtp->data() or return "Data failed $!";
            $smtp->datasend("To: $Empfaenger\n") or return "Empfanger $Empfaenger (Header-To) abgelehnt $!";
            $smtp->datasend("Subject: $Betreff\n") or return "Subject $Betreff abgelehnt $!";
            $smtp->datasend("\n") or return "Data failed $!";
            $smtp->datasend("$ret\n") or return "Data failed $!";
            $smtp->dataend() or return "Data failed $!";
            $smtp->quit or return "Quit failed $!";
            $plugin_info{$plugname2.'_timeout_alarm'} = 1;
            return "eMail gesendet: $ret";
    }
    } else {
      # Reset Merker
      $plugin_info{$plugname2.'_timeout_alarm'} = 0;
    }
    #$ret .= "$plugname2 Timeouts: $plugin_info{$plugname2.'_timeout_err'}";
}

return; #alles ok oder eMail bereits gesendet

